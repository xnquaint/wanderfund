'use strict';

require('dotenv').config();

const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const morgan = require('morgan');

const db = require('./models');
const authRoutes = require('./routes/authRoutes');
const currencyRoutes = require('./routes/currencyRoutes');
const tripRoutes = require('./routes/tripRoutes');
const categoryRoutes = require('./routes/categoryRoutes');
const analyticsService = require('./services/analyticsService');

const app = express();

app.use(cors());
app.use(helmet());
if (process.env.NODE_ENV === 'development') {
  app.use(morgan('dev'));
}
app.use(express.json({ limit: '10kb' }));
app.use(express.urlencoded({ extended: true, limit: '10kb' }));


app.use('/api/auth', authRoutes);
app.use('/api/currencies', currencyRoutes);
app.use('/api/trips', tripRoutes);
app.use('/api/categories', categoryRoutes);

app.all('*', (req, res, next) => {
  res.status(404).json({
    status: 'fail',
    message: `–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ ${req.originalUrl} –Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ!`,
  });
});

app.use((err, req, res, next) => {
  err.statusCode = err.statusCode || 500;
  err.status = err.status || 'error';
  console.error('–ü–û–ú–ò–õ–ö–ê üí•', err);
  res.status(err.statusCode).json({
    status: err.status,
    message: err.message || '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!',
  });
});


const PORT = process.env.PORT || 3001;

db.sequelize.sync()
  .then(async () => {
    console.log('–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–∞.');
    
    try {
      if (analyticsService && typeof analyticsService.trainClassifier === 'function') {
        await analyticsService.trainClassifier();
      } else {
        console.warn('analyticsService.trainClassifier –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ —î —Ñ—É–Ω–∫—Ü—ñ—î—é. –ù–∞–≤—á–∞–Ω–Ω—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ.');
      }
    } catch (trainError) {
      console.error("–ü–æ—á–∞—Ç–∫–æ–≤–µ –Ω–∞–≤—á–∞–Ω–Ω—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –Ω–µ –≤–¥–∞–ª–æ—Å—è:", trainError);
    }

    app.listen(PORT, () => {
      console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—ñ ${PORT}...`);
      console.log(`–°–µ—Ä–µ–¥–æ–≤–∏—â–µ —Ä–æ–∑—Ä–æ–±–∫–∏: ${process.env.NODE_ENV || 'development'}`);
    });
  })
  .catch(err => {
    console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∞–±–æ –∑–∞–ø—É—Å–∫—É:', err);
    process.exit(1);
  });

module.exports = app;
